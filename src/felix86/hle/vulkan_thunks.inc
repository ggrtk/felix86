// Read abi.cpp -> signature format
// X(lib name, func name, signature)

#define KHR(lib, func, sig) X(lib, func, sig) X(lib, func##KHR, sig)
#define EXT(lib, func, sig) X(lib, func, sig) X(lib, func##EXT, sig)
#define KHR_EXT(lib, func, sig) X(lib, func, sig) X(lib, func##KHR, sig) X(lib, func##EXT, sig)
#define KHR_AMD(lib, func, sig) X(lib, func, sig) X(lib, func##KHR, sig) X(lib, func##AMD, sig)

// Vulkan 1.0
X("libvulkan.so", vkGetInstanceProcAddr, q_qq)
X("libvulkan.so", vkGetDeviceProcAddr, q_qq)
X("libvulkan.so", vkCreateInstance, d_qxq)
X("libvulkan.so", vkDestroyInstance, v_qx)
X("libvulkan.so", vkEnumeratePhysicalDevices, d_qqq)
X("libvulkan.so", vkGetPhysicalDeviceProperties, v_qq)
X("libvulkan.so", vkGetPhysicalDeviceQueueFamilyProperties, v_qqq)
X("libvulkan.so", vkCreateDevice, d_qqxq)
X("libvulkan.so", vkDeviceWaitIdle, d_q)
X("libvulkan.so", vkDestroyDevice, v_qx)
X("libvulkan.so", vkGetDeviceQueue, v_qddq)
X("libvulkan.so", vkQueueWaitIdle, d_q)
X("libvulkan.so", vkCreateCommandPool, d_qqxq)
X("libvulkan.so", vkResetCommandPool, d_qqd)
X("libvulkan.so", vkDestroyCommandPool, v_qqx)
X("libvulkan.so", vkAllocateCommandBuffers, d_qqq)
X("libvulkan.so", vkResetCommandBuffer, d_qq)
X("libvulkan.so", vkFreeCommandBuffers, v_qqdq)
X("libvulkan.so", vkBeginCommandBuffer, d_qq)
X("libvulkan.so", vkEndCommandBuffer, d_q)
X("libvulkan.so", vkQueueSubmit, d_qdqq)
X("libvulkan.so", vkCmdExecuteCommands, v_qdq)
X("libvulkan.so", vkCreateFence, d_qqxq)
X("libvulkan.so", vkDestroyFence, v_qqx)
X("libvulkan.so", vkGetFenceStatus, d_qq)
X("libvulkan.so", vkResetFences, d_qdq)
X("libvulkan.so", vkWaitForFences, d_qdqdq)
X("libvulkan.so", vkCreateSemaphore, d_qqxq)
X("libvulkan.so", vkDestroySemaphore, v_qqx)
X("libvulkan.so", vkCreateEvent, d_qqxq)
X("libvulkan.so", vkDestroyEvent, v_qqx)
X("libvulkan.so", vkGetEventStatus, d_qq)
X("libvulkan.so", vkSetEvent, d_qq)
X("libvulkan.so", vkResetEvent, d_qq)
X("libvulkan.so", vkCmdSetEvent, d_qqd)
X("libvulkan.so", vkCmdResetEvent, d_qqd)
X("libvulkan.so", vkCmdWaitEvents, v_qdqdddqdqdq)
X("libvulkan.so", vkCmdPipelineBarrier, v_qddddqdqdq)
X("libvulkan.so", vkCreateRenderPass, d_qqxq)
X("libvulkan.so", vkDestroyRenderPass, v_qqx)
X("libvulkan.so", vkCreateFramebuffer, d_qqxq)
X("libvulkan.so", vkDestroyFramebuffer, v_qqx)
X("libvulkan.so", vkCmdBeginRenderPass, v_qqd)
X("libvulkan.so", vkGetRenderAreaGranularity, v_qqq)
X("libvulkan.so", vkCmdNextSubpass, v_qd)
X("libvulkan.so", vkCmdEndRenderPass, v_q)
X("libvulkan.so", vkCreateShaderModule, d_qqxq)
X("libvulkan.so", vkDestroyShaderModule, v_qqx)
X("libvulkan.so", vkCreateComputePipelines, d_qqdqxq)
X("libvulkan.so", vkCreateGraphicsPipelines, d_qqdqxq)
X("libvulkan.so", vkDestroyPipeline, v_qqx)
X("libvulkan.so", vkCreatePipelineCache, d_qqxq)
X("libvulkan.so", vkMergePipelineCaches, d_qqdq)
X("libvulkan.so", vkGetPipelineCacheData, d_qqqq)
X("libvulkan.so", vkDestroyPipelineCache, v_qqx)
X("libvulkan.so", vkCmdBindPipeline, v_qdq)
X("libvulkan.so", vkGetPhysicalDeviceMemoryProperties, v_qq)
X("libvulkan.so", vkAllocateMemory, d_qqxq)
X("libvulkan.so", vkFreeMemory, v_qqx)
X("libvulkan.so", vkMapMemory, d_qqqqdq)
X("libvulkan.so", vkFlushMappedMemoryRanges, d_qdq)
X("libvulkan.so", vkInvalidateMappedMemoryRanges, d_qdq)
X("libvulkan.so", vkUnmapMemory, v_qq)
X("libvulkan.so", vkGetDeviceMemoryCommitment, v_qqq)
X("libvulkan.so", vkCreateBuffer, d_qqxq)
X("libvulkan.so", vkDestroyBuffer, v_qqx)
X("libvulkan.so", vkCreateBufferView, d_qqxq)
X("libvulkan.so", vkDestroyBufferView, v_qqx)
X("libvulkan.so", vkCreateImage, d_qqxq)
X("libvulkan.so", vkGetImageSubresourceLayout, v_qqqq)
X("libvulkan.so", vkDestroyImage, v_qqx)
X("libvulkan.so", vkCreateImageView, d_qqxq)
X("libvulkan.so", vkDestroyImageView, v_qqx)
X("libvulkan.so", vkGetBufferMemoryRequirements, v_qqq)
X("libvulkan.so", vkGetImageMemoryRequirements, v_qqq)
X("libvulkan.so", vkBindBufferMemory, d_qqqq)
X("libvulkan.so", vkBindImageMemory, d_qqqq)
X("libvulkan.so", vkCreateSampler, d_qqxq)
X("libvulkan.so", vkDestroySampler, v_qqx)
X("libvulkan.so", vkCreateDescriptorSetLayout, d_qqxq)
X("libvulkan.so", vkDestroyDescriptorSetLayout, v_qqx)
X("libvulkan.so", vkCreatePipelineLayout, d_qqxq)
X("libvulkan.so", vkDestroyPipelineLayout, v_qqx)
X("libvulkan.so", vkCreateDescriptorPool, d_qqxq)
X("libvulkan.so", vkDestroyDescriptorPool, v_qqx)
X("libvulkan.so", vkAllocateDescriptorSets, d_qqq)
X("libvulkan.so", vkFreeDescriptorSets, d_qqdq)
X("libvulkan.so", vkResetDescriptorPool, d_qqd)
X("libvulkan.so", vkUpdateDescriptorSets, v_qdqdq)
X("libvulkan.so", vkCmdBindDescriptorSets, v_qqqddqdq)
X("libvulkan.so", vkCmdPushConstants, v_qqdddq)
X("libvulkan.so", vkCreateQueryPool, d_qqxq)
X("libvulkan.so", vkDestroyQueryPool, v_qqx)
X("libvulkan.so", vkCmdResetQueryPool, v_qqdd)
X("libvulkan.so", vkCmdBeginQuery, v_qqdd)
X("libvulkan.so", vkCmdEndQuery, v_qqd)
X("libvulkan.so", vkGetQueryPoolResults, d_qqddqqqd)
X("libvulkan.so", vkCmdCopyQueryPoolResults, v_qqddqqqd)
X("libvulkan.so", vkCmdWriteTimestamp, v_qdqd)
X("libvulkan.so", vkCmdClearColorImage, v_qqqqdq)
X("libvulkan.so", vkCmdClearDepthStencilImage, v_qqqqdq)
X("libvulkan.so", vkCmdClearAttachments, v_qdqdq)
X("libvulkan.so", vkCmdFillBuffer, v_qqqqd)
X("libvulkan.so", vkCmdUpdateBuffer, v_qqqqq)
X("libvulkan.so", vkCmdCopyBuffer, v_qqqdq)
X("libvulkan.so", vkCmdCopyImage, v_qqqqqdq)
X("libvulkan.so", vkCmdCopyBufferToImage, v_qqqqdq)
X("libvulkan.so", vkCmdCopyImageToBuffer, v_qqqqdq)
X("libvulkan.so", vkCmdBlitImage, v_qqqqqdqq)
X("libvulkan.so", vkCmdResolveImage, v_qqqqqdq)
X("libvulkan.so", vkCmdBindIndexBuffer, v_qqqd)
X("libvulkan.so", vkCmdDraw, v_qdddd)
X("libvulkan.so", vkCmdDrawIndexed, v_qddddd)
X("libvulkan.so", vkCmdDrawIndirect, v_qqqdd)
X("libvulkan.so", vkCmdDrawIndexedIndirect, v_qqqdd)
X("libvulkan.so", vkCmdSetScissor, v_qddq)
X("libvulkan.so", vkCmdSetDepthBounds, v_qFF)
X("libvulkan.so", vkCmdSetStencilCompareMask, v_qdd)
X("libvulkan.so", vkCmdSetStencilWriteMask, v_qdd)
X("libvulkan.so", vkCmdSetStencilReference, v_qdd)
X("libvulkan.so", vkCmdBindVertexBuffers, v_qddqq)
X("libvulkan.so", vkCmdSetViewport, v_qddq)
X("libvulkan.so", vkCmdSetLineWidth, v_qF)
X("libvulkan.so", vkCmdSetDepthBias, v_qFFF)
X("libvulkan.so", vkCmdSetBlendConstants, v_qq)
X("libvulkan.so", vkGetPhysicalDeviceSparseImageFormatProperties, v_qdddddqq)
X("libvulkan.so", vkGetImageSparseMemoryRequirements, v_qqqq)
X("libvulkan.so", vkQueueBindSparse, d_qdqq)
X("libvulkan.so", vkCmdDispatch, v_qddd)
X("libvulkan.so", vkCmdDispatchIndirect, v_qqq)

X("libvulkan.so", vkEnumerateInstanceLayerProperties, d_qq)
X("libvulkan.so", vkEnumerateDeviceLayerProperties, d_qqq)
X("libvulkan.so", vkEnumerateInstanceExtensionProperties, d_qqq)
X("libvulkan.so", vkEnumerateDeviceExtensionProperties, d_qqqq)
X("libvulkan.so", vkGetPhysicalDeviceFeatures, v_qq)
X("libvulkan.so", vkGetPhysicalDeviceFormatProperties, v_qdq)
X("libvulkan.so", vkGetPhysicalDeviceImageFormatProperties, d_qdddddq)

// Vulkan 1.1
KHR("libvulkan.so", vkBindBufferMemory2, d_qdq)
KHR("libvulkan.so", vkBindImageMemory2, d_qdq)
KHR("libvulkan.so", vkCmdDispatchBase, v_qdddddd)
KHR("libvulkan.so", vkCmdSetDeviceMask, v_qd)
KHR("libvulkan.so", vkCreateDescriptorUpdateTemplate, d_qqxq)
KHR("libvulkan.so", vkCreateSamplerYcbcrConversion, d_qqxq)
KHR("libvulkan.so", vkDestroyDescriptorUpdateTemplate, v_qqx)
KHR("libvulkan.so", vkDestroySamplerYcbcrConversion, v_qqx)
KHR("libvulkan.so", vkEnumerateInstanceVersion, d_q)
KHR("libvulkan.so", vkEnumeratePhysicalDeviceGroups, d_qqq)
KHR("libvulkan.so", vkGetBufferMemoryRequirements2, v_qqq)
KHR("libvulkan.so", vkGetDescriptorSetLayoutSupport, v_qqq)
KHR("libvulkan.so", vkGetDeviceGroupPeerMemoryFeatures, v_qdddq)
KHR("libvulkan.so", vkGetDeviceQueue2, v_qqq)
KHR("libvulkan.so", vkGetImageMemoryRequirements2, v_qqq)
KHR("libvulkan.so", vkGetImageSparseMemoryRequirements2, v_qqqq)
KHR("libvulkan.so", vkGetPhysicalDeviceExternalBufferProperties, v_qqq)
KHR("libvulkan.so", vkGetPhysicalDeviceExternalFenceProperties, v_qqq)
KHR("libvulkan.so", vkGetPhysicalDeviceExternalSemaphoreProperties, v_qqq)
KHR("libvulkan.so", vkGetPhysicalDeviceFeatures2, v_qq)
KHR("libvulkan.so", vkGetPhysicalDeviceFormatProperties2, v_qqq)
KHR("libvulkan.so", vkGetPhysicalDeviceImageFormatProperties2, d_qqq)
KHR("libvulkan.so", vkGetPhysicalDeviceMemoryProperties2, v_qq)
KHR("libvulkan.so", vkGetPhysicalDeviceProperties2, v_qq)
KHR("libvulkan.so", vkGetPhysicalDeviceQueueFamilyProperties2, v_qqq)
KHR("libvulkan.so", vkGetPhysicalDeviceSparseImageFormatProperties2, v_qqqq)
KHR("libvulkan.so", vkTrimCommandPool, v_qqq)
KHR("libvulkan.so", vkUpdateDescriptorSetWithTemplate, v_qqqq)

// Vulkan 1.2
KHR("libvulkan.so", vkCmdBeginRenderPass2, v_qqq)
KHR("libvulkan.so", vkCmdEndRenderPass2, v_qq)
KHR("libvulkan.so", vkCmdNextSubpass2, v_qqq)
KHR("libvulkan.so", vkCreateRenderPass2, d_qqxq)
KHR("libvulkan.so", vkGetBufferOpaqueCaptureAddress, q_qq)
KHR("libvulkan.so", vkGetDeviceMemoryOpaqueCaptureAddress, q_qq)
KHR("libvulkan.so", vkGetSemaphoreCounterValue, q_qqq)
KHR("libvulkan.so", vkWaitSemaphores, d_qqq)
KHR("libvulkan.so", vkSignalSemaphore, d_qq)
EXT("libvulkan.so", vkResetQueryPool, v_qqdd)
KHR_AMD("libvulkan.so", vkCmdDrawIndexedIndirectCount, v_qqqqqdd)
KHR_AMD("libvulkan.so", vkCmdDrawIndirectCount, v_qqqqqdd)
KHR_EXT("libvulkan.so", vkGetBufferDeviceAddress, q_qq)

// Vulkan 1.3
KHR("libvulkan.so", vkCmdBeginRendering, v_qq)
EXT("libvulkan.so", vkCmdBindVertexBuffers2, v_qddqqqq)
KHR("libvulkan.so", vkCmdBlitImage2, v_qq)
KHR("libvulkan.so", vkCmdCopyBuffer2, v_qq)
KHR("libvulkan.so", vkCmdCopyBufferToImage2, v_qq)
KHR("libvulkan.so", vkCmdCopyImage2, v_qq)
KHR("libvulkan.so", vkCmdCopyImageToBuffer2, v_qq)
KHR("libvulkan.so", vkCmdEndRendering, v_q)
KHR("libvulkan.so", vkCmdPipelineBarrier2, v_qq)
KHR("libvulkan.so", vkCmdResetEvent2, v_qqq)
KHR("libvulkan.so", vkCmdResolveImage2, v_qq)
EXT("libvulkan.so", vkCmdSetCullMode, v_qd)
EXT("libvulkan.so", vkCmdSetDepthBiasEnable, v_qd)
EXT("libvulkan.so", vkCmdSetDepthBoundsTestEnable, v_qd)
EXT("libvulkan.so", vkCmdSetDepthCompareOp, v_qd)
EXT("libvulkan.so", vkCmdSetDepthTestEnable, v_qd)
EXT("libvulkan.so", vkCmdSetDepthWriteEnable, v_qd)
KHR("libvulkan.so", vkCmdSetEvent2, v_qqq)
EXT("libvulkan.so", vkCmdSetFrontFace, v_qd)
EXT("libvulkan.so", vkCmdSetPrimitiveTopology, v_qd)
EXT("libvulkan.so", vkCmdSetRasterizerDiscardEnable, v_qd)
EXT("libvulkan.so", vkCmdSetScissorWithCount, v_qdq)
EXT("libvulkan.so", vkCmdSetStencilOp, v_qddddd)
EXT("libvulkan.so", vkCmdSetStencilTestEnable, v_qd)
EXT("libvulkan.so", vkCmdSetViewportWithCount, v_qdq)
KHR("libvulkan.so", vkCmdWaitEvents2, v_qdqq)
KHR("libvulkan.so", vkCmdWriteTimestamp2, v_qqqd)
EXT("libvulkan.so", vkCreatePrivateDataSlot, d_qqxq)
EXT("libvulkan.so", vkDestroyPrivateDataSlot, v_qqx)
KHR("libvulkan.so", vkGetDeviceBufferMemoryRequirements, v_qqq)
KHR("libvulkan.so", vkGetDeviceImageMemoryRequirements, v_qqq)
KHR("libvulkan.so", vkGetDeviceImageSparseMemoryRequirements, v_qqqq)
EXT("libvulkan.so", vkGetPhysicalDeviceToolProperties, d_qqq)
EXT("libvulkan.so", vkGetPrivateData, v_qdqqq)
KHR("libvulkan.so", vkQueueSubmit2, d_qdqq)
EXT("libvulkan.so", vkSetPrivateData, d_qdqqq)

// EXT
X("libvulkan.so", vkCreateDebugReportCallbackEXT, d_qqxq)
X("libvulkan.so", vkDebugReportMessageEXT, v_qddqqdqq)
X("libvulkan.so", vkDestroyDebugReportCallbackEXT, v_qqx)

// VK_KHR_surface
X("libvulkan.so", vkDestroySurfaceKHR, v_qqx)
X("libvulkan.so", vkGetPhysicalDeviceSurfaceCapabilitiesKHR, d_qqq)
X("libvulkan.so", vkGetPhysicalDeviceSurfaceFormatsKHR, d_qqqq)
X("libvulkan.so", vkGetPhysicalDeviceSurfacePresentModesKHR, d_qqqq)
X("libvulkan.so", vkGetPhysicalDeviceSurfaceSupportKHR, d_qdqq)

// VK_KHR_swapchain
X("libvulkan.so", vkAcquireNextImageKHR, d_qqqqqq)
X("libvulkan.so", vkCreateSwapchainKHR, d_qqxq)
X("libvulkan.so", vkDestroySwapchainKHR, v_qqx)
X("libvulkan.so", vkGetSwapchainImagesKHR, d_qqqq)
X("libvulkan.so", vkQueuePresentKHR, d_qq)

// VK_KHR_swapchain 1.1
X("libvulkan.so", vkAcquireNextImage2KHR, d_qqq)
X("libvulkan.so", vkGetDeviceGroupPresentCapabilitiesKHR, d_qq)
X("libvulkan.so", vkGetDeviceGroupSurfacePresentModesKHR, d_qqq)
X("libvulkan.so", vkGetPhysicalDevicePresentRectanglesKHR, d_qqqq)

// VK_KHR_display_swapchain
X("libvulkan.so", vkCreateSharedSwapchainsKHR, d_qdqqq)

// VK_KHR_get_surface_capabilities2
X("libvulkan.so", vkGetPhysicalDeviceSurfaceFormats2KHR, d_qqqq)
X("libvulkan.so", vkGetPhysicalDeviceSurfaceCapabilities2KHR, d_qqq)

// KHR Wayland
X("libvulkan.so", vkCreateWaylandSurfaceKHR, d_qqxq)
X("libvulkan.so", vkGetPhysicalDeviceWaylandPresentationSupportKHR, d_qdq)

// KHR Xcb
X("libvulkan.so", vkCreateXcbSurfaceKHR, d_qqxq)
X("libvulkan.so", vkGetPhysicalDeviceXcbPresentationSupportKHR, d_qdqq)

// KHR Xlib
X("libvulkan.so", vkCreateXlibSurfaceKHR, d_qqxq)
X("libvulkan.so", vkGetPhysicalDeviceXlibPresentationSupportKHR, d_qdqq)

#undef KHR
#undef EXT