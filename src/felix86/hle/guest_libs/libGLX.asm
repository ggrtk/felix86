; Generated by generator.cpp
; See guest_libs/README.md
bits 64

; These are guest function pointers that we wanna call from host code at will
section .data

align 16
libname:
db "libGLX.so", 0

guest_func_names:
XGetVisualInfo_name:
db "XGetVisualInfo", 0

XSync_name:
db "XSync", 0


section .text

extern __felix86_XGetVisualInfo
extern __felix86_XSync
extern __felix86_ConvertVisualInfo
extern __felix86_glXGetProcAddressSelf

global __felix86_constructor
align 16
__felix86_constructor:
invlpg [rbx]
ret
dd 0x12345678 ; invlpg + ret are 4 bytes, four more here to align to pointer
dq libname
; Here follows the null terminated list of {const char*, void*} (names, functions)
dq XGetVisualInfo_name
dq __felix86_XGetVisualInfo
dq XSync_name
dq __felix86_XSync
dq 0
dq 0

global glXChooseVisual
align 16
glXChooseVisual:
push rdi  ; push guest Display*
invlpg [rax] ; calls host glXChooseVisual
db "glXChooseVisual", 0
pop rdi
mov rsi, rax ; move the return value from the host function to arg2 (host visual info)
jmp __felix86_ConvertVisualInfo wrt ..plt ; converts host to guest visual info, replaces return value in doing so

global glXCreateContext
align 16
glXCreateContext:
invlpg [rax]
db "glXCreateContext", 0
ret

global glXDestroyContext
align 16
glXDestroyContext:
invlpg [rax]
db "glXDestroyContext", 0
ret

global glXMakeCurrent
align 16
glXMakeCurrent:
invlpg [rax]
db "glXMakeCurrent", 0
ret

global glXCopyContext
align 16
glXCopyContext:
invlpg [rax]
db "glXCopyContext", 0
ret

global glXSwapBuffers
align 16
glXSwapBuffers:
invlpg [rax]
db "glXSwapBuffers", 0
ret

global glXCreateGLXPixmap
align 16
glXCreateGLXPixmap:
invlpg [rax]
db "glXCreateGLXPixmap", 0
ret

global glXDestroyGLXPixmap
align 16
glXDestroyGLXPixmap:
invlpg [rax]
db "glXDestroyGLXPixmap", 0
ret

global glXQueryExtension
align 16
glXQueryExtension:
invlpg [rax]
db "glXQueryExtension", 0
ret

global glXQueryVersion
align 16
glXQueryVersion:
invlpg [rax]
db "glXQueryVersion", 0
ret

global glXIsDirect
align 16
glXIsDirect:
invlpg [rax]
db "glXIsDirect", 0
ret

global glXGetConfig
align 16
glXGetConfig:
invlpg [rax]
db "glXGetConfig", 0
ret

global glXGetCurrentContext
align 16
glXGetCurrentContext:
invlpg [rax]
db "glXGetCurrentContext", 0
ret

global glXGetCurrentDrawable
align 16
glXGetCurrentDrawable:
invlpg [rax]
db "glXGetCurrentDrawable", 0
ret

global glXWaitGL
align 16
glXWaitGL:
invlpg [rax]
db "glXWaitGL", 0
ret

global glXWaitX
align 16
glXWaitX:
invlpg [rax]
db "glXWaitX", 0
ret

global glXUseXFont
align 16
glXUseXFont:
invlpg [rax]
db "glXUseXFont", 0
ret

global glXChooseFBConfig
align 16
glXChooseFBConfig:
invlpg [rax]
db "glXChooseFBConfig", 0
ret

global glXCreateNewContext
align 16
glXCreateNewContext:
invlpg [rax]
db "glXCreateNewContext", 0
ret

global glXCreatePbuffer
align 16
glXCreatePbuffer:
invlpg [rax]
db "glXCreatePbuffer", 0
ret

global glXCreatePixmap
align 16
glXCreatePixmap:
invlpg [rax]
db "glXCreatePixmap", 0
ret

global glXCreateWindow
align 16
glXCreateWindow:
invlpg [rax]
db "glXCreateWindow", 0
ret

global glXDestroyPbuffer
align 16
glXDestroyPbuffer:
invlpg [rax]
db "glXDestroyPbuffer", 0
ret

global glXDestroyPixmap
align 16
glXDestroyPixmap:
invlpg [rax]
db "glXDestroyPixmap", 0
ret

global glXDestroyWindow
align 16
glXDestroyWindow:
invlpg [rax]
db "glXDestroyWindow", 0
ret

global glXGetClientString
align 16
glXGetClientString:
invlpg [rax]
db "glXGetClientString", 0
ret

global glXGetCurrentDisplay
align 16
glXGetCurrentDisplay:
invlpg [rax]
db "glXGetCurrentDisplay", 0
ret

global glXGetCurrentReadDrawable
align 16
glXGetCurrentReadDrawable:
invlpg [rax]
db "glXGetCurrentReadDrawable", 0
ret

global glXGetFBConfigAttrib
align 16
glXGetFBConfigAttrib:
invlpg [rax]
db "glXGetFBConfigAttrib", 0
ret

global glXGetFBConfigs
align 16
glXGetFBConfigs:
invlpg [rax]
db "glXGetFBConfigs", 0
ret

global glXGetProcAddress
align 16
glXGetProcAddress:
; glXGetProcAddress can be called with a glX function such as glXChooseVisual
; We need to return a guest pointer to that function which is easier to do in guest code
call __felix86_glXGetProcAddressSelf wrt ..plt
test rax, rax
jnz ptr_ok
; If not found, use the host function. It's probably a GL function in this case
invlpg [rax]
db "glXGetProcAddress", 0
ptr_ok:
ret

global glXGetProcAddressARB
align 16
glXGetProcAddressARB:
jmp glXGetProcAddress

global glXGetSelectedEvent
align 16
glXGetSelectedEvent:
invlpg [rax]
db "glXGetSelectedEvent", 0
ret

global glXGetVisualFromFBConfig
align 16
glXGetVisualFromFBConfig:
push rdi ; push guest Display*
invlpg [rax]
db "glXGetVisualFromFBConfig", 0
pop rdi
mov rsi, rax
jmp __felix86_ConvertVisualInfo wrt ..plt

global glXMakeContextCurrent
align 16
glXMakeContextCurrent:
invlpg [rax]
db "glXMakeContextCurrent", 0
ret

global glXQueryContext
align 16
glXQueryContext:
invlpg [rax]
db "glXQueryContext", 0
ret

global glXQueryDrawable
align 16
glXQueryDrawable:
invlpg [rax]
db "glXQueryDrawable", 0
ret

global glXQueryExtensionsString
align 16
glXQueryExtensionsString:
invlpg [rax]
db "glXQueryExtensionsString", 0
ret

global glXQueryServerString
align 16
glXQueryServerString:
invlpg [rax]
db "glXQueryServerString", 0
ret

global glXSelectEvent
align 16
glXSelectEvent:
invlpg [rax]
db "glXSelectEvent", 0
ret

global __glXGLLoadGLXFunction
align 16
__glXGLLoadGLXFunction:
invlpg [rax]
db "__glXGLLoadGLXFunction", 0
ret


section .data.rel.ro
global __GLXGL_CORE_FUNCTIONS
align 16

__GLXGL_CORE_FUNCTIONS:
    dq glXChooseFBConfig
    dq glXChooseVisual
    dq glXCopyContext
    dq glXCreateContext
    dq glXCreateGLXPixmap
    dq glXCreateNewContext
    dq glXCreatePbuffer
    dq glXCreatePixmap
    dq glXCreateWindow
    dq glXDestroyContext
    dq glXDestroyGLXPixmap
    dq glXDestroyPbuffer
    dq glXDestroyPixmap
    dq glXDestroyWindow
    dq glXGetClientString
    dq glXGetConfig
    dq glXGetCurrentContext
    dq glXGetCurrentDrawable
    dq glXGetCurrentReadDrawable
    dq glXGetFBConfigAttrib
    dq glXGetFBConfigs
    dq glXGetProcAddress
    dq glXGetProcAddressARB
    dq glXGetSelectedEvent
    dq glXGetVisualFromFBConfig
    dq glXIsDirect
    dq glXMakeContextCurrent
    dq glXMakeCurrent
    dq glXQueryContext
    dq glXQueryDrawable
    dq glXQueryExtension
    dq glXQueryExtensionsString
    dq glXQueryServerString
    dq glXQueryVersion
    dq glXSelectEvent
    dq glXSwapBuffers
    dq glXUseXFont
    dq glXWaitGL
    dq glXWaitX

section .init_array
    dq __felix86_constructor