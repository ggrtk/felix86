// Read abi.cpp -> signature format
// X(lib name, func name, signature)
X("libwayland-client.so", wl_display_connect, q_q)
X("libwayland-client.so", wl_display_flush, d_q)
X("libwayland-client.so", wl_display_cancel_read, v_q)
X("libwayland-client.so", wl_display_create_queue, q_q)
X("libwayland-client.so", wl_display_disconnect, v_q)
X("libwayland-client.so", wl_display_dispatch, d_q)
X("libwayland-client.so", wl_display_dispatch_pending, d_q)
X("libwayland-client.so", wl_display_dispatch_queue, d_qq)
X("libwayland-client.so", wl_display_dispatch_queue_pending, d_qq)
X("libwayland-client.so", wl_display_get_error, d_q)
X("libwayland-client.so", wl_display_prepare_read, d_q)
X("libwayland-client.so", wl_display_prepare_read_queue, d_qq)
X("libwayland-client.so", wl_display_read_events, d_q)
X("libwayland-client.so", wl_display_roundtrip, d_q)
X("libwayland-client.so", wl_display_roundtrip_queue, d_qq)
X("libwayland-client.so", wl_display_connect_to_fd, q_d)
X("libwayland-client.so", wl_display_get_fd, d_q)
X("libwayland-client.so", wl_event_queue_destroy, v_q)
X("libwayland-client.so", wl_proxy_add_listener, d_qqq)
X("libwayland-client.so", wl_proxy_create, q_qq)
X("libwayland-client.so", wl_proxy_destroy, v_q)
X("libwayland-client.so", wl_proxy_create_wrapper, q_q)
X("libwayland-client.so", wl_proxy_get_class, q_q)
X("libwayland-client.so", wl_proxy_get_id, d_q)
X("libwayland-client.so", wl_proxy_get_listener, q_q)
X("libwayland-client.so", wl_proxy_get_tag, q_q)
X("libwayland-client.so", wl_proxy_get_user_data, q_q)
X("libwayland-client.so", wl_proxy_get_version, d_q)
X("libwayland-client.so", wl_proxy_set_queue, v_qq)
X("libwayland-client.so", wl_proxy_set_tag, v_qq)
X("libwayland-client.so", wl_proxy_set_user_data, v_qq)
X("libwayland-client.so", wl_proxy_wrapper_destroy, v_q)
X("libwayland-client.so", wl_proxy_marshal_array, v_qdq)
X("libwayland-client.so", wl_proxy_marshal_array_constructor, q_qdqq)
X("libwayland-client.so", wl_proxy_marshal_array_constructor_versioned, q_qdqqd)
X("libwayland-client.so", wl_proxy_marshal_array_flags, q_qdqddq)
X("libwayland-client.so", wl_list_init, v_q)
X("libwayland-client.so", wl_list_insert, v_qq)
X("libwayland-client.so", wl_list_remove, v_q)
X("libwayland-client.so", wl_list_length, d_q)
X("libwayland-client.so", wl_list_empty, d_q)
X("libwayland-client.so", wl_list_insert_list, v_qq)

// These have variadic arguments so we don't thunk them
// X("libwayland-client.so", wl_proxy_marshal, )
// X("libwayland-client.so", wl_proxy_marshal_constructor, )
// X("libwayland-client.so", wl_proxy_marshal_constructor_versioned, )
// X("libwayland-client.so", wl_proxy_marshal_flags, )
